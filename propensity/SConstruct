import glob
import os


PlantUMLBuilder = Builder(
    action='java -jar -Djava.awt.headless=true plantuml.jar -tpng $SOURCE -o generated/')
PrettyBuilder = Builder(
    action='html5-print $SOURCE > tmp_print.html && cp tmp_print.html $SOURCE && touch $TARGET')
TidyBuilder = Builder(
    action='tidy -config .tidy-config -m $SOURCE')
env = Environment(BUILDERS={
    'PlantUMLBuilder': PlantUMLBuilder,
    'TidyBuilder': TidyBuilder,
    'PrettyBuilder': PrettyBuilder
})


import_seq_pre = [
    'actor user'
]
import_seq_lines = [
    ('user', 'runtime', 'import ibex.sklearn.linear_model'),
    ('runtime', 'ibex', 'import ibex'),
    ('runtime', 'ibex.sklearn', 'import ibex.sklearn'),
    ('ibex.sklearn', 'ibex.sklearn', 'register sys.metapath'),
    ('runtime', 'loader', 'import ibex.sklearn.linear_model'),
    ('loader', 'sklearn.linear_model', 'dir'),
    ('sklearn.linear_model', 'loader', 'members'),
    ('loader', 'loader', 'inspect'),
    ('loader', 'loader', 'wrap'),
]


wrapper_wrapped_pre = [
    'actor user',
    'participant Wrapped',
    'participant wrapped',
]
wrapper_wrapped_lines = [
    ('user', 'Wrapped', 'predict(X)'),
    ('Wrapped', 'Wrapped', 'validate; strip'),
    ('Wrapped', 'Wrapped', 'predict(Xt)'),
    ('wrapped', 'Wrapped', 'yt'),
    ('Wrapped', 'Wrapped', 'add metadata'),
    ('Wrapped', 'user', 'y'),
]


def make_seq(base_name, pre, lines):
    for i, _ in enumerate(lines):
        text = []
        text.append('@startuml')
        text.append('')
        text.append('skinparam monochrome true')
        text.append('skinparam shadowing false')
        text.append('')
        text.extend(pre)
        text.append('')
        for j, l in enumerate(lines):
            color = 'black' if i == j else 'grey'
            back = 'grey' if i == j else 'white'
            text.append('autonumber %d "<font color=%s>"' % (j + 1, color))
            text.append('%s -[#%s]> %s: <back:%s>%s</back>' % (l[0], color, l[1], back, l[2]))
        text.append('')
        text.append('@enduml')
        open('%s_%d.plantuml' % (base_name, i + 1), 'w').write('\n'.join(text))


make_seq('wrapper_wrapped', wrapper_wrapped_pre, wrapper_wrapped_lines)
make_seq('import_seq', import_seq_pre, import_seq_lines)


for f_name in glob.glob('*.plantuml'):
    src, target = f_name, os.path.join('generated', os.path.splitext(f_name)[0] + '.png')
    env.PlantUMLBuilder(target, src)
#env.TidyBuilder('index.html.tidy', 'index.html')
